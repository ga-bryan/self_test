#!/usr/bin/python
# -*- coding: UTF-8 -*-
"""
@author:  BryanGa
@time:  2021/11/30
@des:   临时
"""

import json
import time
from random import sample
from datetime import datetime

import pandas as pd
import requests
from zipfile import ZipFile
import os
import uuid
import hashlib


def get_project_base_directory(project_base=None):
    if project_base:
        return project_base
    project_base = os.path.abspath(
        os.path.dirname(os.path.realpath(__file__))
    )
    return project_base


t = """15658823600
13818507720
13126636167
13735576732
18511866798
18811390787
18500368642
18710055142
15011052971
18500387704
15121179672
13686474580
18210195864
18326137880
13269893167
18110292015
13510567124
15013883371
13535699486
15622108304
13955286857
18575628187
13552376559
15622108304
18668907348
18500566310
13911217190
13701397423
18737272720
15110248220
13269510632
18819253801
18723135299
17621793961
15510295532
17512027831
15813819760
13823639781
13923742262
13951853480
18707135069
18565668644
13061744836
15019470809
18824301193
15899787619
18565881003
18127071421
17323486347
15155335117
18664339602
18101196058
13430759906
15962804987
15817204663
15901358650
17510240978
13269739407
13296598516
13826291779
13552467196
15521462056
18110292015
15010983676
15580014001
17600809380
18670395958
17714417683
17512037635
15820452825
13611193352
15810594115
18124700535
13480243443
13671079615
18211561104
15573160424
17701058140
13265559669
13827470886
18682140757
18173178077
15021642393
13609625336
18810302966
15801212547
18813037379
18875134630
15022363025
13321175000
18002160392
15521218313
18600376311
13810115711
18316854565
13761702366
18810322636
13612939315
18851822155
18826845252
18851822155
13488715707
18077788907
13482444039
18730605869
15833655856
18627729349
15101108698
13682389711
15675201933
18722272536
15011515022
18271418269
18268326889
18611954772
18665363526
18610017056
18510351026
17610429253
18501770600
18513358432
13716820137
18171110104
15849222770
13070187785
13331059898
18317092190
13549304343
18665388378
15201753887
13023102085
18611135400
13760497477
15797718680
15889552799
13632581346
13482041662
18845610259
15180138087
15622108348
18600039960
15171445957
17601079227
13555779657
13686878674
19173346118
17600258511
13716166784
18514733770
17621902644
15879195355
18682181903
15902165006
13911825902
17734454492
13916425979
15210232133
15901560620
15900738049
18041294139
19521281653
13902455801
13522523235
13620921545
18710221084
18855169936
13681191863
18510776699
19991971147
18636839630
17621689083
13381777361
13058065293
18813031044
15566284521
15024409868
18701817072
15829397573
13631299931
18521400856
18521032820
13146979482
18811791693
18310233039"""
print(t.split("\n"))

result = [["id", "date", "label", "reserved"]]
for i in ['15658823600', '13818507720', '13126636167', '13735576732', '18511866798', '18811390787', '18500368642',
          '18710055142', '15011052971', '18500387704', '15121179672', '13686474580', '18210195864', '18326137880',
          '13269893167', '18110292015', '13510567124', '15013883371', '13535699486', '15622108304', '13955286857',
          '18575628187', '13552376559', '15622108304', '18668907348', '18500566310', '13911217190', '13701397423',
          '18737272720', '15110248220', '13269510632', '18819253801', '18723135299', '17621793961', '15510295532',
          '17512027831', '15813819760', '13823639781', '13923742262', '13951853480', '18707135069', '18565668644',
          '13061744836', '15019470809', '18824301193', '15899787619', '18565881003', '18127071421', '17323486347',
          '15155335117', '18664339602', '18101196058', '13430759906', '15962804987', '15817204663', '15901358650',
          '17510240978', '13269739407', '13296598516', '13826291779', '13552467196', '15521462056', '18110292015',
          '15010983676', '15580014001', '17600809380', '18670395958', '17714417683', '17512037635', '15820452825',
          '13611193352', '15810594115', '18124700535', '13480243443', '13671079615', '18211561104', '15573160424',
          '17701058140', '13265559669', '13827470886', '18682140757', '18173178077', '15021642393', '13609625336',
          '18810302966', '15801212547', '18813037379', '18875134630', '15022363025', '13321175000', '18002160392',
          '15521218313', '18600376311', '13810115711', '18316854565', '13761702366', '18810322636', '13612939315',
          '18851822155', '18826845252', '18851822155', '13488715707', '18077788907', '13482444039', '18730605869',
          '15833655856', '18627729349', '15101108698', '13682389711', '15675201933', '18722272536', '15011515022',
          '18271418269', '18268326889', '18611954772', '18665363526', '18610017056', '18510351026', '17610429253',
          '18501770600', '18513358432', '13716820137', '18171110104', '15849222770', '13070187785', '13331059898',
          '18317092190', '13549304343', '18665388378', '15201753887', '13023102085', '18611135400', '13760497477',
          '15797718680', '15889552799', '13632581346', '13482041662', '18845610259', '15180138087', '15622108348',
          '18600039960', '15171445957', '17601079227', '13555779657', '13686878674', '19173346118', '17600258511',
          '13716166784', '18514733770', '17621902644', '15879195355', '18682181903', '15902165006', '13911825902',
          '17734454492', '13916425979', '15210232133', '15901560620', '15900738049', '18041294139', '19521281653',
          '13902455801', '13522523235', '13620921545', '18710221084', '18855169936', '13681191863', '18510776699',
          '19991971147', '18636839630', '17621689083', '13381777361', '13058065293', '18813031044', '15566284521',
          '15024409868', '18701817072', '15829397573', '13631299931', '18521400856', '18521032820', '13146979482',
          '18811791693', '18310233039']:
    ii = hashlib.md5(i.encode()).hexdigest()
    result.append([ii, 20190201, "", ""])
new_csv_path = "/Users/bryanga/PycharmProjects/self_test/data/xingyung_phone.csv"
pd.DataFrame(result).to_csv(new_csv_path, header=0,
                            index=False)
